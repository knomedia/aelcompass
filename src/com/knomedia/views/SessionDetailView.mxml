<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title=""
		viewActivate="onActive(event)">
	<fx:Script>
		<![CDATA[
			import com.knomedia.events.SessionRequestEvent;
			import com.knomedia.models.Session;
			import com.knomedia.models.SessionCollection;
			
			import spark.components.supportClasses.StyleableStageText;
			import spark.components.supportClasses.StyleableTextField;
			import spark.events.ViewNavigatorEvent;
			
			private var _session:Session;
			
			[Dispatcher]
			public var dispatcher:IEventDispatcher;
			
			[Inject]
			public var sessionCollection:SessionCollection;
			
			protected function onActive(event:ViewNavigatorEvent):void
			{
				_session = Session( data );
				this.title = _session.day + " - " + _session.start;
				titleTF.text = _session.name;
				StyleableTextField( infoTF.textDisplay ).htmlText = _session.info;
				
				var infoLines:int = 0;
				for (var i:int = 0 ; i<StyleableTextField(infoTF.textDisplay).numLines; i++)
				{
					infoLines += StyleableTextField(infoTF.textDisplay).getLineMetrics(i).height;
				}
				infoTF.height = infoLines;
				attendingCB.selected = _session.userAttending;
				setUpLabels();
				setupCB();
			}
			private function setUpLabels():void
			{
				countTF.text = "Registered: " + _session.count;
				limitTF.text = "Capacity: " + ( (_session.limit == 0)? "Unlimited" : _session.limit );
			}
			
			private function setupCB():void
			{
				var lb:String = "";
				if ( !_session.userAttending && (_session.limit <= _session.count) && _session.limit != 0	 )
				{
					lb = "Session is full";
					attendingCB.enabled = false;
				} else if ( _session.userAttending || _session.limit > _session.count || _session.limit == 0 ) {
					lb = "Registered?";
					attendingCB.enabled = true;
				}
				attendingCB.label = lb;
			}
			
			private function sessionAttendingChange():void
			{
				if ( attendingCB.selected != _session.userAttending )
				{
					var evt:SessionRequestEvent;
					if (attendingCB.selected)
					{
						evt = new SessionRequestEvent(SessionRequestEvent.ADD, _session);						
					} else {
						evt = new SessionRequestEvent(SessionRequestEvent.REMOVE, _session);
					}
					dispatcher.dispatchEvent( evt );					
				}
			}
			
			[EventHandler(event="SessionCacheEvent.UPDATED")]
			public function onSessionCacheChange():void
			{
				_session = sessionCollection.getSessionById( _session.sessionId );
				if ( _session )
				{
					setUpLabels();
					setupCB();
				}
			}
			
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout paddingTop="10"
						  paddingRight="10"
						  paddingBottom="10"
						  paddingLeft="10" />
	</s:layout>
	
	<s:navigationContent>
		<s:Button label="Sessions" click="navigator.popView()"
				  />
	</s:navigationContent>
	
	<s:TextArea width="100%" editable="false" borderVisible="false" id="titleTF" fontWeight="bold"
				/>
	<s:Group width="100%" height="100%">
		<s:Scroller top="5" bottom="5" left="5" right="5"
					horizontalScrollPolicy="off"
					verticalScrollPolicy="auto">
			<s:VGroup width="100%" height="100%">
				
				<s:TextArea width="100%" id="infoTF" editable="false"
							skinClass="spark.skins.mobile.TextAreaSkin"
							borderVisible="false"
							/>
			</s:VGroup>
		</s:Scroller>
		<s:Rect width="100%" height="100%" radiusX="5" radiusY="5" >
			<s:stroke>
				<s:SolidColorStroke color="0xDDDDDD" pixelHinting="true" />
			</s:stroke>
		</s:Rect>
	</s:Group>
	<s:HGroup verticalAlign="middle" width="100%" paddingTop="10"
			  paddingRight="10"
			  paddingBottom="10"
			  paddingLeft="10">
		<s:VGroup horizontalAlign="left" >
			<s:Label id="countTF" fontSize="10" />
			<s:Label id="limitTF" fontSize="10" />
			
		</s:VGroup>
		<s:Spacer width="100%" />
		<s:Label id="attendingTF" text="Attend?" />
		<s:ToggleSwitch id="attendingCB"
						skinClass="com.knomedia.skins.ToggleSwitchSkin"
						change="sessionAttendingChange()"/>
		
	</s:HGroup>
	
	<!--Add ability to switch attending session data by clicking the cb above-->
</s:View>
